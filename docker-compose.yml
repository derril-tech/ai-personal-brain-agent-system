version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: mindmesh_postgres
    environment:
      POSTGRES_DB: mindmesh
      POSTGRES_USER: mindmesh_user
      POSTGRES_PASSWORD: mindmesh_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mindmesh_user -d mindmesh"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: mindmesh_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: MinIO for S3-compatible storage in development
  minio:
    image: minio/minio:latest
    container_name: mindmesh_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Optional: LangSmith for AI development
  langsmith:
    image: langchain/langsmith:latest
    container_name: mindmesh_langsmith
    environment:
      LANGCHAIN_ENDPOINT: http://localhost:1984
      LANGCHAIN_API_KEY: ls_development_key
      LANGCHAIN_PROJECT: mindmesh-dev
    ports:
      - "1984:1984"
    volumes:
      - langsmith_data:/data

volumes:
  postgres_data:
  redis_data:
  minio_data:
  langsmith_data:
